/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type { SimpleStorage, SimpleStorageInterface } from "../SimpleStorage";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_favoriteNumber",
        type: "uint256",
      },
    ],
    name: "addPerson",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "favoriteNumbersList",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "nameToFavoriteNumber",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "people",
    outputs: [
      {
        internalType: "uint256",
        name: "favoriteNumber",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "retrieve",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_favoriteNumber",
        type: "uint256",
      },
    ],
    name: "store",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506107d9806100206000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80632e64cec1146100675780636057361d146100855780636f760f41146100a15780638bab8dd5146100bd5780639e7a13ad146100ed578063cb3214471461011e575b600080fd5b61006f61014e565b60405161007c91906103c4565b60405180910390f35b61009f600480360381019061009a919061041f565b610157565b005b6100bb60048036038101906100b69190610592565b61016a565b005b6100d760048036038101906100d291906105ee565b6101fa565b6040516100e491906103c4565b60405180910390f35b6101076004803603810190610102919061041f565b610228565b6040516101159291906106bf565b60405180910390f35b6101386004803603810190610133919061041f565b6102e4565b60405161014591906103c4565b60405180910390f35b60008054905090565b8060008190555061016661014e565b5050565b600360405180604001604052808381526020018481525090806001815401808255809150506001900390600052602060002090600202016000909190919091506000820151816000015560208201518160010190805190602001906101d0929190610308565b505050806001836040516101e4919061072b565b9081526020016040518091039020819055505050565b6001818051602081018201805184825260208301602085012081835280955050505050506000915090505481565b6003818154811061023857600080fd5b906000526020600020906002020160009150905080600001549080600101805461026190610771565b80601f016020809104026020016040519081016040528092919081815260200182805461028d90610771565b80156102da5780601f106102af576101008083540402835291602001916102da565b820191906000526020600020905b8154815290600101906020018083116102bd57829003601f168201915b5050505050905082565b600281815481106102f457600080fd5b906000526020600020016000915090505481565b82805461031490610771565b90600052602060002090601f016020900481019282610336576000855561037d565b82601f1061034f57805160ff191683800117855561037d565b8280016001018555821561037d579182015b8281111561037c578251825591602001919060010190610361565b5b50905061038a919061038e565b5090565b5b808211156103a757600081600090555060010161038f565b5090565b6000819050919050565b6103be816103ab565b82525050565b60006020820190506103d960008301846103b5565b92915050565b6000604051905090565b600080fd5b600080fd5b6103fc816103ab565b811461040757600080fd5b50565b600081359050610419816103f3565b92915050565b600060208284031215610435576104346103e9565b5b60006104438482850161040a565b91505092915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61049f82610456565b810181811067ffffffffffffffff821117156104be576104bd610467565b5b80604052505050565b60006104d16103df565b90506104dd8282610496565b919050565b600067ffffffffffffffff8211156104fd576104fc610467565b5b61050682610456565b9050602081019050919050565b82818337600083830152505050565b6000610535610530846104e2565b6104c7565b90508281526020810184848401111561055157610550610451565b5b61055c848285610513565b509392505050565b600082601f8301126105795761057861044c565b5b8135610589848260208601610522565b91505092915050565b600080604083850312156105a9576105a86103e9565b5b600083013567ffffffffffffffff8111156105c7576105c66103ee565b5b6105d385828601610564565b92505060206105e48582860161040a565b9150509250929050565b600060208284031215610604576106036103e9565b5b600082013567ffffffffffffffff811115610622576106216103ee565b5b61062e84828501610564565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610671578082015181840152602081019050610656565b83811115610680576000848401525b50505050565b600061069182610637565b61069b8185610642565b93506106ab818560208601610653565b6106b481610456565b840191505092915050565b60006040820190506106d460008301856103b5565b81810360208301526106e68184610686565b90509392505050565b600081905092915050565b600061070582610637565b61070f81856106ef565b935061071f818560208601610653565b80840191505092915050565b600061073782846106fa565b915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061078957607f821691505b6020821081141561079d5761079c610742565b5b5091905056fea264697066735822122050351d66388e39a251d0a015916351cf41ebb4f52ec360ae7f6bde8477dbc19c64736f6c63430008080033";

type SimpleStorageConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SimpleStorageConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SimpleStorage__factory extends ContractFactory {
  constructor(...args: SimpleStorageConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      SimpleStorage & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): SimpleStorage__factory {
    return super.connect(runner) as SimpleStorage__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SimpleStorageInterface {
    return new Interface(_abi) as SimpleStorageInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): SimpleStorage {
    return new Contract(address, _abi, runner) as unknown as SimpleStorage;
  }
}
